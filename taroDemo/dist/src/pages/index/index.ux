<import src='../../npm/@tarojs/components-qa/src/components/taro-page/index' name='taro-page'></import>
<style src="./index.css"></style>
<template>
<taro-page pagepath='{{pagePath__temp}}'><div class='index'><text class='button head'>超级属性系列</text><text onclick='registerSuperProperty' class='button'>registerSuperProperty</text><text onclick='registerSuperProperties' class='button'>registerSuperProperties</text><text onclick='unRegisterSuperProperty' class='button'>unRegisterSuperProperty</text><text onclick='registerSuperProperties' class='button'>getSuperProperty</text><text onclick='getSuperProperty' class='button'>getSuperProperties</text><text onclick='clearSuperProperties' class='button'>clearSuperProperties</text><text class='button head'>profile 系列</text><text onclick='profileSet' class='button'>profileSet</text><text onclick='profileSetOnce' class='button'>profileSetOnce</text><text onclick='profileIncrement' class='button'>profileIncrement</text><text onclick='profileAppend' class='button'>profileAppend 单个属性</text><text onclick='profileAppendArray' class='button'>profileAppend 多个属性集合</text><text onclick='profileAppendObject' class='button'>profileAppend 列表类型属性</text><text onclick='profileUnset' class='button'>profileUnset</text><text onclick='profileDelete' class='button'>profileDelete</text><text class='button head'>其他</text><text onclick='getPresetProperties' class='button'>getPresetProperties</text><text onclick='pageView' class='button'>pageView</text><text onclick='track' class='button'>track</text><text onclick='identify' class='button'>identify</text><text onclick='reset' class='button'>reset</text><text onclick='appProperty' class='button'>appProperty</text><text onclick='registerSuperProperties' class='button'>share</text><text onclick='getDistinctId' class='button'>getDistinctId</text><text onclick='nextPage' class='button'>下一页</text></div></taro-page>
</template>
<script>
import Taro, { Component as __BaseComponent, internal_safe_get, internal_get_original, internal_inline_style, handleLoopRef, genCompid, genLoopCompid, propsManager } from "../../npm/@tarojs/taro-quickapp/index.js";

const app = Taro.getApp();
const AnalysysAgent = app._def.globalData.AnalysysAgent;
console.log(3333, AnalysysAgent);

class Index extends __BaseComponent {
  static properties = {};
  static privateTaroEvent = ["registerSuperProperty", "registerSuperProperties", "unRegisterSuperProperty", "getSuperProperty", "clearSuperProperties", "profileSet", "profileSetOnce", "profileIncrement", "profileAppend", "profileAppendArray", "profileAppendObject", "profileUnset", "profileDelete", "getPresetProperties", "pageView", "track", "identify", "reset", "appProperty", "getDistinctId", "nextPage"];
  $usedState = ["pagePath__temp"];

  _constructor() {
    super._constructor(...arguments);
    /**
     * 指定config的类型声明为: Taro.Config
     *
     * 由于 typescript 对于 object 类型推导只能推出 Key 的基本类型
     * 对于像 navigationBarTextStyle: 'black' 这样的推导出的类型是 string
     * 提示和声明 navigationBarTextStyle: 'black' | 'white' 类型冲突, 需要显示声明类型
     */
  }
  componentWillMount() {
    this.__listenToSetNavigationBarEvent();
  }
  componentDidMount() {
  
  }
  componentWillUnmount() {
    
  }
  componentDidShow() {
    this.__listenToSetNavigationBarEvent();

    AnalysysAgent.appStart({});
  }
  componentDidHide() {
    this.__offListenToSetNavigationBarEvent();
  }
  getPresetProperties() {
    // console.log(1111, AnalysysAgent)
    AnalysysAgent.getPresetProperties();
    // AnalysysAgent.appStart({});
    // AnalysysAgent.pageView();
    // AnalysysAgent.registerSuperProperty("wewe", "dedede");
  }
  appProperty() {
    let obj = {
      openId: 200000,
      age: 2000
    };
    AnalysysAgent.appProperty(obj);
  }
  getDistinctId() {
    AnalysysAgent.getDistinctId();
    console.log(AnalysysAgent.getDistinctId());
  }
  nextPage() {
    console.log("跳转");
    Taro.navigateTo({
      url: 'pages/logs/logs'
    });
  }
  _createData() {
    this.__state = arguments[0] || this.state || {};
    this.__props = arguments[1] || this.props || {};
    const __isRunloopRef = arguments[2];
    const __prefix = this.$prefix;
    ;
    const pagePath__temp = "/pages/index/index";
    Object.assign(this.__state, {
      pagePath__temp: pagePath__temp
    });
    return this.__state;
  }
  config = {
    navigationBarTitleText: '首页'
  };
  onShareAppMessage = () => {
    // console.log("来到这里")
    let shareObj = {
      'path': "pages/index/index?id=33333",
      'title': "框架版分享标识"
    };
    let anshare = AnalysysAgent.share(shareObj);
    return anshare;
  };
  pageView = () => {
    let pageInfo = {
      "commodityName": "iPhone",
      "commodityPrice": 8000
    };
    AnalysysAgent.pageView("商品页", pageInfo);
  };
  alias = () => {
    AnalysysAgent.alias("sanban", "yiban");
  };
  identify = () => {
    AnalysysAgent.identify("userName");
  };
  reset = () => {
    AnalysysAgent.reset();
  };
  registerSuperProperty = () => {
    AnalysysAgent.registerSuperProperty("age", 20);
  };
  registerSuperProperties = () => {
    let superProperty = {
      "age": 20,
      "member": "VIP"
    };
    AnalysysAgent.registerSuperProperties(superProperty);
  };
  unRegisterSuperProperty = () => {
    AnalysysAgent.unRegisterSuperProperty("age");
  };
  clearSuperProperties = () => {
    AnalysysAgent.clearSuperProperties();
  };
  getSuperProperty = () => {
    AnalysysAgent.getSuperProperty("member");
  };
  getSuperProperties = () => {
    AnalysysAgent.getSuperProperties();
  };
  track = () => {
    let eventInfo = {
      "money": 2000
    };
    console.log("track");
    AnalysysAgent.track("payment", eventInfo);
  };
  profileSet = () => {
    let profiles = {
      "Email": "yonghu@163.com",
      "WeChatID": "微信号"
    };
    AnalysysAgent.profileSet(profiles);
  };
  profileSetOnce = () => {
    let setOnceProfiles = {
      "activationTime": "1521594686781",
      "loginTime": "1521594726781"
    };
    AnalysysAgent.profileSetOnce(setOnceProfiles);
  };
  profileIncrement = () => {
    let profies = {
      "age": 20,
      "integral": 200
    };
    AnalysysAgent.profileIncrement(profies);
  };
  profileAppend = () => {
    AnalysysAgent.profileAppend("Movies", "霸王别姬");
  };
  profileAppendObject = () => {
    let propertyObject = { 'Movies': '霸王别姬', 'Music': ['一无所有', '花房姑娘'] };
    AnalysysAgent.profileAppend(propertyObject);
  };
  profileAppendArray = () => {
    let properties = ["海上钢琴师", "指环王"];
    AnalysysAgent.profileAppend("Movies", properties);
  };
  profileUnset = () => {
    AnalysysAgent.profileUnset("Movies");
  };
  profileDelete = () => {
    AnalysysAgent.profileDelete();
  };
  customComponents = [];
  static $$componentPath = "pages/index/index";

  __listenToSetNavigationBarEvent() {
    if (!Taro.eventCenter.callbacks['TaroEvent:setNavigationBar']) {
      Taro.eventCenter.on('TaroEvent:setNavigationBar', params => {
        if (params.title) {
          this.$scope.$page.setTitleBar({
            text: params.title
          });
        }

        if (params.frontColor) {
          this.$scope.$page.setTitleBar({
            textColor: params.frontColor
          });
        }

        if (params.backgroundColor) {
          this.$scope.$page.setTitleBar({
            backgroundColor: params.backgroundColor
          });
        }
      });
    }
  }

  __offListenToSetNavigationBarEvent() {
    Taro.eventCenter.off('TaroEvent:setNavigationBar');
  }

}

export default require('../../npm/@tarojs/taro-quickapp/index.js').default.createComponent(Index, '/pages/index/index');
</script>
